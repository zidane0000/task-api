name: Go Test

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.10'

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests with coverage
        run: |
          go test -race -coverprofile coverage.out -covermode atomic $(go list ./... | grep -v /tests)
          go tool cover -func coverage.out

      - name: Build application
        run: go build -o task-api ./cmd/server

      - name: Start backend server
        run: |
          export PORT=8080
          ./task-api &
          echo $! > backend.pid
          sleep 5

      - name: Wait for server to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:8080/health; do sleep 1; done'

      - name: Run E2E tests
        run: go test ./tests/...

      - name: Cleanup
        if: always()
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
          fi
